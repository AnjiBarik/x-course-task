import React, { useState, useMemo } from 'react';
import './specificBook.css';
import Footer from "../footer/Footer";
import Header from '../header/Header';
import { Link, Navigate } from "react-router-dom";
import { BooksContext } from '../../BooksContext';

export default function SpecificBook() {
    const { cartItems, theme } = React.useContext(BooksContext);
    // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑—É—î–º–æ –¥–∞–Ω—ñ –∑ `localStorage.specificBook`
    const { author, price, image, title, description } = JSON.parse(localStorage.specificBook);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≤–∂–µ –¥–∞–Ω—ñ –ø—Ä–æ –∫–Ω–∏–≥—É –≤ –∫–æ—à–∏–∫—É, —Ç–∞ –æ—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–∏–≥ —É –∫–æ—à–∏–∫—É
    const booksInCart = cartItems || [];
    const specificCount = booksInCart.find(el => el.title === title)?.count;

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ —É –∫–æ—à–∏–∫
    function addedBooks() {
        const total = { count, totalBooklPrice: totalBookPrice, title, price };
        booksInCart.push(total);
        localStorage.bookToCart = JSON.stringify(booksInCart);
    }

    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ö—É–∫ `useState` –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–Ω–∏–≥ —É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ
    const [count, setCount] = useState(specificCount || 1);

    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ö—É–∫ `useMemo` –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó —Ü—ñ–Ω–∏ –∫–Ω–∏–≥–∏
    const totalBookPrice = useMemo(() => ('$' + price * count).slice(1), [count, price]);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É localStorage. –Ø–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    if (!localStorage.username) {
        return <Navigate to="/" redirect={true} />;
    }

    const buttonTitle = specificCount > 0 ? `in Cart ${specificCount} book` : 'Add to cartüõí';

    let book = (
        <section className="book-page">
            <figure>
                <img src={image} alt={title} />
                <figcaption>
                    <p>
                        <b>Description: </b>
                        {description}
                    </p>
                </figcaption>
            </figure>
            <section className="about">
                <p><b>Book name: </b>{title}</p>
                <p><b>Book author:</b> {author}</p>
                <p><b>Book level:</b> Beginner</p>
                <p><b>Book tags:</b> Core</p>
            </section>
            <section className="price-block custom-element">
                <div className="price-block-row">
                    <span>Price, $ </span>
                    <span id="price">{price}</span>
                </div>
                <div className="price-block-row">
                    <label htmlFor="count">Count:</label>
                    <div>
                        <button
                            type="button"
                            disabled={count === 1 || specificCount}
                            onClick={() => setCount(prevCount => Math.max(1, prevCount - 1))}
                        >-</button>
                        <button
                            type="button"
                            disabled={count === 42 || specificCount}
                            onClick={() => setCount(prevCount => Math.min(42, prevCount + 1))}
                        >+</button>
                        <input
                            onChange={(e) => setCount(Math.min(42, Math.max(1, parseInt(Number(e.target.value)))))}
                            type="number"
                            id="count"
                            min="1"
                            max="42"
                            value={count}
                        />
                    </div>
                </div>
                <div className="price-block-row">
                    <span>Total price, $ </span>
                    <span id="totalPrice">{totalBookPrice}</span>
                </div>
                <Link to="/cart">
                    <button onClick={addedBooks} className="price-block-btn" type="submit" disabled={specificCount}>
                        {buttonTitle}
                    </button>
                </Link>
            </section>
        </section>
    );

    return (
        <>
            <section className={theme}>
                <section className="header">
                    <Header />
                </section>
                {book}
                <Footer />
            </section>
        </>
    );
}